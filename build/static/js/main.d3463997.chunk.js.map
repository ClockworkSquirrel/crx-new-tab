{"version":3,"sources":["state/store.jsx","components/attribution/author-info.jsx","components/attribution/author-image-avatar.jsx","components/attribution/image-source-button.jsx","components/attribution/root.jsx","components/wallpaper.jsx","components/search-input/webstore-button.jsx","components/icons/google-colour-icon.jsx","components/icons/google-icon.jsx","components/search-input/root.jsx","components/main-content.jsx","views/ntp.jsx","components/app.jsx","index.js"],"names":["localStorageKey","Config","localStorage","savedState","JSON","parse","getItem","DefaultStore","store","focusSearchEvent","EventTarget","persist","wallpaperTags","wallpaperData","fetched","imageUrl","imagePage","userName","userImageUrl","actions","fetchWallpaper","a","date","Date","today","getFullYear","String","getMonth","padStart","getDate","unsplashUrl","URL","endpoints","unsplash","searchParams","set","join","fetch","method","response","ok","json","urls","raw","toString","links","html","user","name","profile_image","medium","console","error","message","focusSearch","focus","searchEvent","Event","dispatchEvent","unfocusSearch","autoEffect","setItem","stringify","useStyles","makeStyles","theme","root","display","flexDirection","flexGrow","margin","spacing","alignItems","justifyContent","overflow","infoText","fontSize","typography","textOverflow","whiteSpace","width","fontWeight","fontWeightBold","source","fontWeightLight","AuthorInfo","props","classes","className","Typography","variant","clsx","Avatar","alt","src","breakpoints","down","ImageSourceButton","IconButton","color","rel","target","height","backgroundColor","backdropFilter","padding","cursor","AttributionContainer","authorImage","href","url","backgroundImage","backgroundUrl","backgroundSize","backgroundPosition","palette","background","paper","InternalWallpaperDiv","children","useState","showBackground","setShowBackground","useEffect","image","Image","onload","Fade","in","view","setWallpaperData","then","data","WebstoreButton","platform","isFirefox","isEdge","Tooltip","title","webstore","placement","createSvgIcon","fill","d","rootTransition","transitions","easing","easeOut","duration","shortest","borderRadius","shape","transition","default","border","divider","boxShadow","shadows","searchInput","useTheme","searchText","setSearchText","searchInputRef","useRef","addEventListener","evt","detail","current","blur","onClickCapture","type","InputBase","placeholder","style","autoComplete","inputRef","onKeyPress","which","preventDefault","typedUrl","value","window","location","assign","err","searchUrl","search","onChange","MainContent","wallpaperItem","maxWidth","flexShrink","only","contentItem","minWidth","values","sm","NTPView","flags","overflowX","isDark","matchMedia","matches","document","body","key","ThemeProvider","dark","enableDarkMode","createMuiTheme","fontFamily","CssBaseline","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.d3463997.chunk.js","sourcesContent":["import { store, autoEffect } from \"@risingstack/react-easy-state\"\r\nimport Config from \"../config.json\"\r\n\r\nconst localStorageKey = Config.localStorage\r\nconst savedState = JSON.parse(localStorage.getItem(localStorageKey))\r\n\r\nconst DefaultStore = store({\r\n    focusSearchEvent: new EventTarget(),\r\n\r\n    persist: {\r\n        wallpaperTags: [\"landscapes\", \"textures\", \"art\", \"life\", \"earth\", \"cityscapes\", \"geometric\", \"animals\", \"nature\"],\r\n        wallpaperData: {\r\n            fetched: null,\r\n            imageUrl: null,\r\n            imagePage: null,\r\n            userName: null,\r\n            userImageUrl: null\r\n        },\r\n\r\n        ...savedState\r\n    },\r\n\r\n    actions: {\r\n        fetchWallpaper: async () => {\r\n            const date = new Date()\r\n            const today = `${date.getFullYear()}${String(date.getMonth() + 1).padStart(2, 0)}${String(date.getDate()).padStart(2, 0)}`\r\n\r\n            if (DefaultStore.persist.wallpaperData?.fetched !== today) {\r\n                try {\r\n                    const unsplashUrl = new URL(Config.endpoints.unsplash)\r\n                    unsplashUrl.searchParams.set(\"query\", DefaultStore.persist.wallpaperTags.join(\",\"))\r\n\r\n                    const response = await fetch(unsplashUrl, {\r\n                        method: \"GET\"\r\n                    })\r\n\r\n                    if (response.ok) {\r\n                        const json = await response.json()\r\n\r\n                        const imageUrl = new URL(json?.urls?.raw)\r\n                        imageUrl.searchParams.set(\"crop\", \"focalpoint\")\r\n                        imageUrl.searchParams.set(\"fit\", \"crop\")\r\n                        imageUrl.searchParams.set(\"w\", 512)\r\n                        imageUrl.searchParams.set(\"h\", 1080)\r\n\r\n                        DefaultStore.persist.wallpaperData = {\r\n                            fetched: today,\r\n                            imageUrl: imageUrl.toString(),\r\n                            imagePage: json?.links?.html,\r\n                            userName: json?.user?.name,\r\n                            userImageUrl: json?.user?.profile_image?.medium\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err?.message ?? err)\r\n                }\r\n            }\r\n\r\n            return DefaultStore.persist.wallpaperData\r\n        },\r\n\r\n        focusSearch: async (focus = true) => {\r\n            const searchEvent = new Event(focus ? \"focus\" : \"blur\")\r\n            DefaultStore.focusSearchEvent.dispatchEvent(searchEvent)\r\n        },\r\n\r\n        unfocusSearch: async () => DefaultStore.actions.focusSearch(false)\r\n    }\r\n})\r\n\r\nautoEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(DefaultStore.persist))\r\n})\r\n\r\nexport default DefaultStore\r\n","import React from \"react\"\r\n\r\nimport { makeStyles, Typography } from \"@material-ui/core\"\r\nimport clsx from \"clsx\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        margin: theme.spacing(0, 0, 0, 2),\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    infoText: {\r\n        fontSize: theme.typography.fontSize,\r\n        margin: 0,\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        width: \"100%\"\r\n    },\r\n    name: {\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    source: {\r\n        fontWeight: theme.typography.fontWeightLight\r\n    }\r\n}))\r\n\r\nconst AuthorInfo = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"body1\" className={clsx(classes.infoText, classes.name)}>\r\n                {props?.name}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" className={clsx(classes.infoText, classes.source)}>\r\n                {\r\n                    props?.source\r\n                        ? `via ${props.source}`\r\n                        : \"\"\r\n                }\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorInfo\r\n","import React from \"react\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\n\r\nexport default props => <Avatar alt={props?.name} src={props?.src} />\r\n","import React from \"react\"\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\r\n\r\nimport ViewSourceIcon from \"@material-ui/icons/OpenInBrowser\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst ImageSourceButton = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <IconButton\r\n            color=\"inherit\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            className={classes.root}\r\n            {...props}\r\n        >\r\n            <ViewSourceIcon />\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default ImageSourceButton\r\n","import React from \"react\"\r\n\r\nimport AuthorInfo from \"./author-info\"\r\nimport AuthorImageAvatar from \"./author-image-avatar\"\r\nimport ImageSourceButton from \"./image-source-button\"\r\n\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: 64,\r\n        backgroundColor: \"rgba(0, 0, 0, .38)\",\r\n        color: \"rgba(255, 255, 255, .87)\",\r\n        backdropFilter: \"blur(32px)\",\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        cursor: \"default\"\r\n    }\r\n}))\r\n\r\nconst AttributionContainer = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AuthorImageAvatar name={props.name} src={props.authorImage} />\r\n            <AuthorInfo name={props.name} source={props.source} />\r\n            <ImageSourceButton href={props.url} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttributionContainer\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../state/store\"\r\n\r\nimport { makeStyles, Fade } from \"@material-ui/core\"\r\nimport AttributionContainer from \"./attribution/root\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundImage: ({ backgroundUrl }) => `url(${backgroundUrl})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}))\r\n\r\nconst InternalWallpaperDiv = ({ imageUrl, children }) => {\r\n    const classes = useStyles({ backgroundUrl: imageUrl })\r\n    const [showBackground, setShowBackground] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!imageUrl) return\r\n\r\n        const image = new Image()\r\n        image.onload = () => setShowBackground(true)\r\n        image.src = imageUrl\r\n    }, [imageUrl])\r\n\r\n    return (\r\n        <Fade in={showBackground}>\r\n            <div className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nconst Wallpaper = () => {\r\n    const [wallpaperData, setWallpaperData] = useState()\r\n\r\n    useEffect(() => {\r\n        DefaultStore.actions.fetchWallpaper()\r\n            .then(data => setWallpaperData(data))\r\n    }, [])\r\n\r\n    return (\r\n        <InternalWallpaperDiv imageUrl={wallpaperData?.imageUrl}>\r\n            <AttributionContainer\r\n                name={wallpaperData?.userName}\r\n                source=\"Unsplash\"\r\n                url={wallpaperData?.imagePage}\r\n                authorImage={wallpaperData?.userImageUrl}\r\n            />\r\n        </InternalWallpaperDiv>\r\n    )\r\n}\r\n\r\nexport default view(Wallpaper)\r\n","import React from \"react\"\r\n\r\nimport Config from \"../../config.json\"\r\nimport { isFirefox, isEdge } from \"react-device-detect\"\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport ExtensionIcon from \"@material-ui/icons/Extension\"\r\nimport { Tooltip } from \"@material-ui/core\"\r\n\r\nconst WebstoreButton = () => {\r\n    const platform = isFirefox ? \"firefox\" : isEdge ? \"edge\" : \"chrome\"\r\n\r\n    return (\r\n        <Tooltip title={Config.webstore[platform].name} placement=\"left\">\r\n            <IconButton href={Config.webstore[platform].url} rel=\"noopener noreferrer\">\r\n                <ExtensionIcon />\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default WebstoreButton\r\n","import React from \"react\"\r\nimport createSvgIcon from \"@material-ui/icons/utils/createSvgIcon\"\r\n\r\nexport default createSvgIcon(\r\n    <>\r\n        <path fill=\"#ff3d00\" d=\"M12.222 5.977a5.402 5.402 0 0 1 3.823 1.496l2.868-2.868A9.61 9.61 0 0 0 12.222 2a9.996 9.996 0 0 0-8.937 5.51l3.341 2.59a5.96 5.96 0 0 1 5.596-4.123z\"/>\r\n        <path fill=\"#ffc107\" d=\"M3.285 7.51a10.013 10.013 0 0 0 0 8.98l3.341-2.59a5.913 5.913 0 0 1 0-3.8l-3.34-2.59z\"/>\r\n        <path fill=\"#4caf50\" d=\"M15.608 17.068A6.033 6.033 0 0 1 6.626 13.9l-3.34 2.59A9.996 9.996 0 0 0 12.221 22a9.547 9.547 0 0 0 6.618-2.423l-3.232-2.509z\"/>\r\n        <path fill=\"#1976d2\" d=\"M21.64 10.182h-9.418v3.868h5.382a4.6 4.6 0 0 1-1.996 3.018l-.01.006l.01-.006l3.232 2.51a9.753 9.753 0 0 0 2.982-7.35c0-.687-.06-1.371-.182-2.046z\"/>\r\n    </>,\r\n    \"GoogleColour\"\r\n)\r\n","import React from \"react\"\r\nimport createSvgIcon from \"@material-ui/icons/utils/createSvgIcon\"\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M20.283 10.356h-8.327v3.451h4.792c-.446 2.193-2.313 3.453-4.792 3.453a5.27 5.27 0 0 1-5.279-5.28a5.27 5.27 0 0 1 5.279-5.279c1.259 0 2.397.447 3.29 1.178l2.6-2.599c-1.584-1.381-3.615-2.233-5.89-2.233a8.908 8.908 0 0 0-8.934 8.934a8.907 8.907 0 0 0 8.934 8.934c4.467 0 8.529-3.249 8.529-8.934c0-.528-.081-1.097-.202-1.625z\"/>,\r\n    \"Google\"\r\n)\r\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport Config from \"../../config.json\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../../state/store\"\r\n\r\nimport { InputBase, makeStyles, useTheme } from \"@material-ui/core\"\r\n\r\nimport WebstoreButton from \"./webstore-button\"\r\n\r\nimport GoogleColourIcon from \"../icons/google-colour-icon\"\r\nimport GoogleIcon from \"../icons/google-icon\"\r\n\r\nconst rootTransition = theme => `${theme.transitions.easing.easeOut} ${theme.transitions.duration.shortest}ms`\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        padding: theme.spacing(1, 1, 1, 2),\r\n        borderRadius: theme.shape.borderRadius * 2,\r\n        alignItems: \"center\",\r\n        cursor: \"text\",\r\n        transition: `background-color ${rootTransition(theme)}, box-shadow ${rootTransition(theme)}, border ${rootTransition(theme)}`,\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.background.default}`,\r\n\r\n        \"&:focus-within\": {\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            boxShadow: theme.shadows[3],\r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    },\r\n    searchInput: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing(0, 1, 0, 2),\r\n        display: \"block\",\r\n        height: \"100%\"\r\n    }\r\n}))\r\n\r\nconst SearchInputRoot = () => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const searchInputRef = useRef(null)\r\n\r\n    const submitQuery = evt => {\r\n        if (evt.which === 13) {\r\n            evt.preventDefault()\r\n\r\n            try {\r\n                const typedUrl = new URL(evt.target.value)\r\n                window.location.assign(typedUrl.toString())\r\n            } catch (err) {\r\n                const searchUrl = new URL(Config.endpoints.search)\r\n                searchUrl.searchParams.set(\"q\", evt.target.value)\r\n\r\n                window.location.assign(searchUrl.toString())\r\n            }\r\n        }\r\n    }\r\n\r\n    const onInputChanged = evt => {\r\n        evt.preventDefault()\r\n        setSearchText(evt.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        DefaultStore.focusSearchEvent.addEventListener(\"focus\", evt => {\r\n            if (evt.detail)\r\n                setSearchText(`${searchText}${evt.detail}`)\r\n\r\n            searchInputRef.current.focus()\r\n        })\r\n\r\n        DefaultStore.focusSearchEvent.addEventListener(\"blur\", () => {\r\n            searchInputRef.current.blur()\r\n        })\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root} onClickCapture={DefaultStore.actions.focusSearch}>\r\n            {\r\n                theme.palette.type === \"dark\"\r\n                    ? <GoogleIcon />\r\n                    : <GoogleColourIcon />\r\n            }\r\n\r\n            <InputBase\r\n                className={classes.searchInput}\r\n                placeholder={\"Search Google or type a URL\"}\r\n                name=\"q\"\r\n                style={{ width: \"100%\", display: \"flex\", height: \"100%\" }}\r\n                autoComplete=\"off\"\r\n                inputRef={searchInputRef}\r\n                onKeyPress={submitQuery}\r\n                value={searchText}\r\n                onChange={onInputChanged}\r\n            />\r\n\r\n            <WebstoreButton />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default view(SearchInputRoot)\r\n","import React from \"react\"\r\n\r\nimport SearchInput from \"./search-input/root\"\r\n\r\nconst MainContent = () => {\r\n    return (\r\n        <div>\r\n            <SearchInput />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n","import React from \"react\"\r\n\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nimport Wallpaper from \"../components/wallpaper\"\r\nimport MainContent from \"../components/main-content\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    wallpaperItem: {\r\n        maxWidth: 512,\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n        overflow: \"hidden\",\r\n\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    contentItem: {\r\n        flexGrow: 1,\r\n        flexShrink: 0,\r\n        minWidth: theme.breakpoints.values.sm,\r\n        padding: theme.spacing(3),\r\n\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            minWidth: \"100%\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst NTPView = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.wallpaperItem}>\r\n                <Wallpaper />\r\n            </div>\r\n\r\n            <div className={classes.contentItem}>\r\n                <MainContent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NTPView\r\n","import React, { useEffect } from \"react\"\r\nimport Config from \"../config.json\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../state/store\"\r\n\r\nimport { ThemeProvider, CssBaseline, createMuiTheme, makeStyles } from \"@material-ui/core\"\r\nimport NTPView from \"../views/ntp\"\r\n\r\nconst { flags } = Config\r\n\r\nconst generateTheme = props => createMuiTheme({\r\n    palette: {\r\n        type: props?.dark ? \"dark\" : \"light\"\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            \"'Lexend Deca'\",\r\n            \"Helvetica\",\r\n            \"Arial\",\r\n            \"sans-serif\"\r\n        ]\r\n    }\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        overflowX: \"hidden\"\r\n    }\r\n})\r\n\r\nconst App = () => {\r\n    const classes = useStyles()\r\n    const isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", evt => {\r\n            if (evt.target === document.body) {\r\n                DefaultStore.actions.focusSearch()\r\n            } else if (evt.target !== document.body && evt.key === \"Escape\") {\r\n                evt.preventDefault()\r\n                DefaultStore.actions.unfocusSearch()\r\n            }\r\n        }, false)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ThemeProvider theme={generateTheme({\r\n                dark: process.env.NODE_ENV === \"development\"\r\n                    ? flags.enableDarkModeDev && isDark\r\n                    : flags.enableDarkMode && isDark\r\n            })}>\r\n                <CssBaseline />\r\n\r\n                <NTPView />\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default view(App)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"fontsource-lexend-deca\"\n\nimport App from \"./components/app\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.querySelector(\"#app\")\n)\n"],"sourceRoot":""}