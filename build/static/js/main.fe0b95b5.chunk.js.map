{"version":3,"sources":["state/store.jsx","components/attribution/author-info.jsx","components/attribution/author-image-avatar.jsx","components/attribution/image-source-button.jsx","components/attribution/root.jsx","components/wallpaper.jsx","components/search-input/webstore-button.jsx","components/icons/google-colour-icon.jsx","components/icons/google-icon.jsx","components/search-input/root.jsx","components/main-content.jsx","views/ntp.jsx","components/app.jsx","index.js"],"names":["localStorageKey","Config","localStorage","savedState","JSON","parse","getItem","DefaultStore","store","focusSearchEvent","EventTarget","persist","wallpaperTags","wallpaperData","fetched","imageUrl","imagePage","userName","userImageUrl","webstoreIcon","actions","fetchWallpaper","a","date","Date","today","getFullYear","String","getMonth","padStart","getDate","unsplashUrl","URL","endpoints","unsplash","searchParams","set","join","fetch","method","response","ok","json","urls","raw","toString","links","html","user","name","profile_image","medium","console","error","message","focusSearch","focus","searchEvent","Event","dispatchEvent","unfocusSearch","fetchFavicon","url","preferredSize","fullUrl","favicons","hostname","then","res","data","icons","icon","sizes","src","catch","err","autoEffect","setItem","stringify","useStyles","makeStyles","theme","root","display","flexDirection","flexGrow","margin","spacing","alignItems","justifyContent","overflow","infoText","fontSize","typography","textOverflow","whiteSpace","width","fontWeight","fontWeightBold","source","fontWeightLight","AuthorInfo","props","classes","className","Typography","variant","clsx","Avatar","alt","breakpoints","down","ImageSourceButton","IconButton","color","rel","target","height","backgroundColor","backdropFilter","padding","cursor","AttributionContainer","authorImage","href","backgroundImage","backgroundUrl","backgroundSize","backgroundPosition","palette","background","paper","InternalWallpaperDiv","children","useState","showBackground","setShowBackground","useEffect","image","Image","loading","onload","Fade","in","view","setWallpaperData","platform","isFirefox","isEdge","isOpera","showIcon","setShowIcon","webstore","Tooltip","title","placement","unmountOnExit","mountOnEnter","onExited","createSvgIcon","fill","d","rootTransition","transitions","easing","easeOut","duration","shortest","borderRadius","shape","transition","default","border","divider","boxShadow","shadows","searchRoot","searchInput","suggestRoot","suggestItem","text","secondary","primary","suggestItemSelected","suggestNavKeys","NavigateOrSearch","query","detectedUrl","URLs","get","Error","trim","match","window","location","assign","searchUrl","search","useTheme","searchFocused","setSearchFocused","searchText","setSearchText","searchInputRef","useRef","selectedSuggestion","setSelectedSuggestion","searchSuggestions","setSearchSuggestions","throttleSuggest","throttle","autocompleteUrl","autocomplete","navigator","language","trailing","addEventListener","current","blur","onClickCapture","type","InputBase","placeholder","autoComplete","inputRef","onKeyDown","evt","key","preventDefault","value","includes","length","onChange","suggestions","onFocus","onBlur","Collapse","map","suggestion","index","onClick","suggestItemText","MainContent","wallpaperItem","maxWidth","flexShrink","only","contentItem","minWidth","values","sm","NTPView","flags","overflowX","isDark","matchMedia","matches","document","body","ThemeProvider","dark","enableDarkMode","createMuiTheme","fontFamily","CssBaseline","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.fe0b95b5.chunk.js","sourcesContent":["import { store, autoEffect } from \"@risingstack/react-easy-state\"\r\nimport Config from \"../config.json\"\r\n\r\nconst localStorageKey = Config.localStorage\r\nconst savedState = JSON.parse(localStorage.getItem(localStorageKey))\r\n\r\nconst DefaultStore = store({\r\n    focusSearchEvent: new EventTarget(),\r\n\r\n    persist: {\r\n        wallpaperTags: [\r\n            \"landscapes\",\r\n            \"textures\",\r\n            \"art\",\r\n            \"life\",\r\n            \"earth\",\r\n            \"cityscapes\",\r\n            \"geometric\",\r\n            \"animals\",\r\n            \"nature\"\r\n        ],\r\n\r\n        wallpaperData: {\r\n            fetched: null,\r\n            imageUrl: null,\r\n            imagePage: null,\r\n            userName: null,\r\n            userImageUrl: null\r\n        },\r\n\r\n        webstoreIcon: null,\r\n\r\n        ...savedState\r\n    },\r\n\r\n    actions: {\r\n        fetchWallpaper: async () => {\r\n            const date = new Date()\r\n            const today = `${date.getFullYear()}${String(date.getMonth() + 1).padStart(2, 0)}${String(date.getDate()).padStart(2, 0)}`\r\n\r\n            if (DefaultStore.persist.wallpaperData?.fetched !== today) {\r\n                try {\r\n                    const unsplashUrl = new URL(Config.endpoints.unsplash)\r\n                    unsplashUrl.searchParams.set(\"query\", DefaultStore.persist.wallpaperTags.join(\",\"))\r\n\r\n                    const response = await fetch(unsplashUrl, {\r\n                        method: \"GET\"\r\n                    })\r\n\r\n                    if (response.ok) {\r\n                        const json = await response.json()\r\n\r\n                        const imageUrl = new URL(json?.urls?.raw)\r\n                        imageUrl.searchParams.set(\"crop\", \"focalpoint\")\r\n                        imageUrl.searchParams.set(\"fit\", \"crop\")\r\n                        imageUrl.searchParams.set(\"w\", 512)\r\n                        imageUrl.searchParams.set(\"h\", 1080)\r\n\r\n                        DefaultStore.persist.wallpaperData = {\r\n                            fetched: today,\r\n                            imageUrl: imageUrl.toString(),\r\n                            imagePage: json?.links?.html,\r\n                            userName: json?.user?.name,\r\n                            userImageUrl: json?.user?.profile_image?.medium\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                    console.error(err?.message ?? err)\r\n                }\r\n            }\r\n\r\n            return DefaultStore.persist.wallpaperData\r\n        },\r\n\r\n        focusSearch: async (focus = true) => {\r\n            const searchEvent = new Event(focus ? \"focus\" : \"blur\")\r\n            DefaultStore.focusSearchEvent.dispatchEvent(searchEvent)\r\n        },\r\n\r\n        unfocusSearch: async () => DefaultStore.actions.focusSearch(false),\r\n\r\n        fetchFavicon: async (url = \"\", preferredSize = \"32x32\") => {\r\n            const fullUrl = new URL(url)\r\n\r\n            return fetch(`${Config.endpoints.favicons}/${fullUrl.hostname}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    for (const icon of data?.icons ?? []) {\r\n                        if (icon?.sizes === preferredSize)\r\n                            return icon?.src\r\n                    }\r\n\r\n                    return data?.icons?.[0]?.src\r\n                })\r\n                .catch(err => console.error(err))\r\n        }\r\n    }\r\n})\r\n\r\nautoEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(DefaultStore.persist))\r\n})\r\n\r\nexport default DefaultStore\r\n","import React from \"react\"\r\n\r\nimport { makeStyles, Typography } from \"@material-ui/core\"\r\nimport clsx from \"clsx\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexGrow: 1,\r\n        margin: theme.spacing(0, 0, 0, 2),\r\n        alignItems: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        overflow: \"hidden\"\r\n    },\r\n    infoText: {\r\n        fontSize: theme.typography.fontSize,\r\n        margin: 0,\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        width: \"100%\"\r\n    },\r\n    name: {\r\n        fontWeight: theme.typography.fontWeightBold\r\n    },\r\n    source: {\r\n        fontWeight: theme.typography.fontWeightLight\r\n    }\r\n}))\r\n\r\nconst AuthorInfo = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"body1\" className={clsx(classes.infoText, classes.name)}>\r\n                {props?.name}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body1\" className={clsx(classes.infoText, classes.source)}>\r\n                {\r\n                    props?.source\r\n                        ? `via ${props.source}`\r\n                        : \"\"\r\n                }\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorInfo\r\n","import React from \"react\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\n\r\nexport default props => <Avatar alt={props?.name} src={props?.src} />\r\n","import React from \"react\"\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\"\r\n\r\nimport ViewSourceIcon from \"@material-ui/icons/OpenInBrowser\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst ImageSourceButton = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <IconButton\r\n            color=\"inherit\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            className={classes.root}\r\n            {...props}\r\n        >\r\n            <ViewSourceIcon />\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default ImageSourceButton\r\n","import React from \"react\"\r\n\r\nimport AuthorInfo from \"./author-info\"\r\nimport AuthorImageAvatar from \"./author-image-avatar\"\r\nimport ImageSourceButton from \"./image-source-button\"\r\n\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: \"100%\",\r\n        height: 64,\r\n        backgroundColor: \"rgba(0, 0, 0, .38)\",\r\n        color: \"rgba(255, 255, 255, .87)\",\r\n        backdropFilter: \"blur(32px)\",\r\n        padding: theme.spacing(1),\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        cursor: \"default\"\r\n    }\r\n}))\r\n\r\nconst AttributionContainer = props => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AuthorImageAvatar name={props.name} src={props.authorImage} />\r\n            <AuthorInfo name={props.name} source={props.source} />\r\n            <ImageSourceButton href={props.url} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AttributionContainer\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../state/store\"\r\n\r\nimport { makeStyles, Fade } from \"@material-ui/core\"\r\nimport AttributionContainer from \"./attribution/root\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundImage: ({ backgroundUrl }) => `url(${backgroundUrl})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}))\r\n\r\nconst InternalWallpaperDiv = ({ imageUrl, children }) => {\r\n    const classes = useStyles({ backgroundUrl: imageUrl })\r\n    const [showBackground, setShowBackground] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!imageUrl || showBackground) return\r\n\r\n        const image = new Image()\r\n        image.loading = \"eager\"\r\n        image.onload = () => setShowBackground(true)\r\n        image.src = imageUrl\r\n    }, [imageUrl, showBackground])\r\n\r\n    return (\r\n        <Fade in={showBackground}>\r\n            <div className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nconst Wallpaper = () => {\r\n    const [wallpaperData, setWallpaperData] = useState([])\r\n\r\n    useEffect(() => {\r\n        DefaultStore.actions.fetchWallpaper()\r\n            .then(data => setWallpaperData(data))\r\n    }, [])\r\n\r\n    return (\r\n        <InternalWallpaperDiv imageUrl={wallpaperData?.imageUrl}>\r\n            <AttributionContainer\r\n                name={wallpaperData?.userName}\r\n                source=\"Unsplash\"\r\n                url={wallpaperData?.imagePage}\r\n                authorImage={wallpaperData?.userImageUrl}\r\n            />\r\n        </InternalWallpaperDiv>\r\n    )\r\n}\r\n\r\nexport default view(Wallpaper)\r\n","import React, { useEffect, useState } from \"react\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../../state/store\"\r\n\r\nimport Config from \"../../config.json\"\r\nimport { isFirefox, isEdge, isOpera } from \"react-device-detect\"\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport ExtensionIcon from \"@material-ui/icons/Extension\"\r\nimport { Tooltip, Fade } from \"@material-ui/core\"\r\n\r\nconst WebstoreButton = () => {\r\n    const platform = isFirefox ? \"firefox\" : isEdge ? \"edge\" : isOpera ? \"opera\" : \"chrome\"\r\n    const webstoreIcon = DefaultStore.persist.webstoreIcon\r\n\r\n    const [showIcon, setShowIcon] = useState(webstoreIcon)\r\n\r\n    useEffect(() => {\r\n        if (!DefaultStore.persist.webstoreIcon) {\r\n            DefaultStore.actions.fetchFavicon(Config.webstore[platform].url)\r\n                .then(icon => DefaultStore.persist.webstoreIcon = icon)\r\n                .catch(console.error)\r\n        }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <Tooltip title={Config.webstore[platform].name} placement=\"left\">\r\n            <IconButton href={Config.webstore[platform].url} rel=\"noopener noreferrer\">\r\n                <Fade in={showIcon} unmountOnExit mountOnEnter>\r\n                    <img src={webstoreIcon} width={24} height={24} alt={Config.webstore[platform].name} />\r\n                </Fade>\r\n\r\n                <Fade\r\n                    in={!webstoreIcon}\r\n                    unmountOnExit\r\n                    mountOnEnter\r\n                    onExited={() => setShowIcon(true)}\r\n                >\r\n                    <ExtensionIcon />\r\n                </Fade>\r\n            </IconButton>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default view(WebstoreButton)\r\n","import React from \"react\"\r\nimport createSvgIcon from \"@material-ui/icons/utils/createSvgIcon\"\r\n\r\nexport default createSvgIcon(\r\n    <>\r\n        <path fill=\"#ff3d00\" d=\"M12.222 5.977a5.402 5.402 0 0 1 3.823 1.496l2.868-2.868A9.61 9.61 0 0 0 12.222 2a9.996 9.996 0 0 0-8.937 5.51l3.341 2.59a5.96 5.96 0 0 1 5.596-4.123z\"/>\r\n        <path fill=\"#ffc107\" d=\"M3.285 7.51a10.013 10.013 0 0 0 0 8.98l3.341-2.59a5.913 5.913 0 0 1 0-3.8l-3.34-2.59z\"/>\r\n        <path fill=\"#4caf50\" d=\"M15.608 17.068A6.033 6.033 0 0 1 6.626 13.9l-3.34 2.59A9.996 9.996 0 0 0 12.221 22a9.547 9.547 0 0 0 6.618-2.423l-3.232-2.509z\"/>\r\n        <path fill=\"#1976d2\" d=\"M21.64 10.182h-9.418v3.868h5.382a4.6 4.6 0 0 1-1.996 3.018l-.01.006l.01-.006l3.232 2.51a9.753 9.753 0 0 0 2.982-7.35c0-.687-.06-1.371-.182-2.046z\"/>\r\n    </>,\r\n    \"GoogleColour\"\r\n)\r\n","import React from \"react\"\r\nimport createSvgIcon from \"@material-ui/icons/utils/createSvgIcon\"\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M20.283 10.356h-8.327v3.451h4.792c-.446 2.193-2.313 3.453-4.792 3.453a5.27 5.27 0 0 1-5.279-5.28a5.27 5.27 0 0 1 5.279-5.279c1.259 0 2.397.447 3.29 1.178l2.6-2.599c-1.584-1.381-3.615-2.233-5.89-2.233a8.908 8.908 0 0 0-8.934 8.934a8.907 8.907 0 0 0 8.934 8.934c4.467 0 8.529-3.249 8.529-8.934c0-.528-.081-1.097-.202-1.625z\"/>,\r\n    \"Google\"\r\n)\r\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport clsx from \"clsx\"\r\n\r\nimport Config from \"../../config.json\"\r\n\r\nimport URLs from \"my-name-is-url\"\r\nimport throttle from \"lodash.throttle\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../../state/store\"\r\n\r\nimport { InputBase, makeStyles, useTheme, Collapse, Typography } from \"@material-ui/core\"\r\n\r\nimport WebstoreButton from \"./webstore-button\"\r\n\r\nimport GoogleColourIcon from \"../icons/google-colour-icon\"\r\nimport GoogleIcon from \"../icons/google-icon\"\r\n\r\nconst rootTransition = theme => `${theme.transitions.easing.easeOut} ${theme.transitions.duration.shortest}ms`\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100%\",\r\n        padding: 0,\r\n        borderRadius: theme.shape.borderRadius * 2,\r\n        transition: [\r\n            `background-color ${rootTransition(theme)}`,\r\n            `box-shadow ${rootTransition(theme)}`,\r\n            `border ${rootTransition(theme)}`,\r\n            `height ${rootTransition(theme)}`\r\n        ],\r\n        backgroundColor: theme.palette.background.default,\r\n        border: `1px solid ${theme.palette.background.default}`,\r\n\r\n        \"&:focus-within\": {\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            boxShadow: theme.shadows[3],\r\n            backgroundColor: theme.palette.background.paper\r\n        }\r\n    },\r\n    searchRoot: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        cursor: \"text\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing(1, 1, 1, 2)\r\n    },\r\n    searchInput: {\r\n        flexGrow: 1,\r\n        margin: theme.spacing(0, 1, 0, 2),\r\n        display: \"block\",\r\n        height: \"100%\"\r\n    },\r\n    suggestRoot: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        margin: theme.spacing(0, 1, 1)\r\n    },\r\n    suggestItem: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        color: theme.palette.text.secondary,\r\n        padding: theme.spacing(1),\r\n        borderRadius: theme.shape.borderRadius,\r\n        transition: [\r\n            `background-color ${rootTransition(theme)}`,\r\n            `padding ${rootTransition(theme)}`,\r\n            `color ${rootTransition(theme)}`\r\n        ],\r\n        cursor: \"pointer\",\r\n\r\n        \"&:hover\": {\r\n            color: theme.palette.text.primary\r\n        }\r\n    },\r\n    suggestItemSelected: {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.divider\r\n    }\r\n}))\r\n\r\nconst suggestNavKeys = [\r\n    \"ArrowUp\",\r\n    \"ArrowDown\"\r\n]\r\n\r\nfunction NavigateOrSearch(query = \"\") {\r\n    try {\r\n        const detectedUrl = URLs(query).get()?.[0]\r\n\r\n        if (!detectedUrl)\r\n            throw new Error(\"No URLs matched\")\r\n\r\n        if (query.trim() !== detectedUrl)\r\n            throw new Error(\"Search input contained more than just a URL\")\r\n\r\n        if (detectedUrl.match(/^(?:[a-z]+:)?\\/\\//i)) {\r\n            window.location.assign(detectedUrl)\r\n        } else {\r\n            window.location.assign(`http://${detectedUrl}`)\r\n        }\r\n    } catch (err) {\r\n        const searchUrl = new URL(Config.endpoints.search)\r\n        searchUrl.searchParams.set(\"q\", query)\r\n\r\n        window.location.assign(searchUrl.toString())\r\n    }\r\n}\r\n\r\nconst SearchInputRoot = () => {\r\n    const classes = useStyles()\r\n    const theme = useTheme()\r\n\r\n    const [searchFocused, setSearchFocused] = useState(false)\r\n\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const searchInputRef = useRef(null)\r\n\r\n    const [selectedSuggestion, setSelectedSuggestion] = useState(-1)\r\n    const [searchSuggestions, setSearchSuggestions] = useState([])\r\n    const throttleSuggest = useRef(throttle((query = searchText) => {\r\n        /*\r\n            Search suggestions endpoint, used by Chromium:\r\n            https://github.com/chromium/chromium/blob/2ca8c5037021c9d2ecc00b787d58a31ed8fc8bcb/chrome/test/data/firefox_searchplugins/default/google.xml\r\n        */\r\n\r\n        const autocompleteUrl = new URL(`${Config.endpoints.autocomplete}`)\r\n        autocompleteUrl.searchParams.set(\"hl\", navigator.language ?? \"en-GB\")\r\n        autocompleteUrl.searchParams.set(\"q\", query)\r\n\r\n        return fetch(autocompleteUrl.toString())\r\n            .then(res => res.json())\r\n            .then(res => res?.[1] ?? [])\r\n            .catch(err => console.error(err))\r\n    }, 250, { trailing: true }))\r\n\r\n    const submitQuery = evt => {\r\n        if (evt.key === \"Enter\") {\r\n            evt.preventDefault()\r\n\r\n            NavigateOrSearch(evt.target.value)\r\n        } else if (suggestNavKeys.includes(evt.key)) {\r\n            evt.preventDefault()\r\n\r\n            if (evt.key === \"ArrowUp\") {\r\n                if (selectedSuggestion <= 0) {\r\n                    setSelectedSuggestion(searchSuggestions.length - 1)\r\n                } else {\r\n                    setSelectedSuggestion(selectedSuggestion - 1)\r\n                }\r\n            } else {\r\n                if (selectedSuggestion === searchSuggestions.length - 1) {\r\n                    setSelectedSuggestion(0)\r\n                } else {\r\n                    setSelectedSuggestion(selectedSuggestion + 1)\r\n                }\r\n            }\r\n\r\n            return false\r\n        }\r\n    }\r\n\r\n    const onInputChanged = evt => {\r\n        evt.preventDefault()\r\n        setSearchText(evt.target.value)\r\n\r\n        if (!evt.target.value.trim().length)\r\n            return setSearchSuggestions([])\r\n\r\n        throttleSuggest.current(evt.target.value)\r\n            .then(suggestions => setSearchSuggestions(suggestions))\r\n            .catch(err => console.error(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        DefaultStore.focusSearchEvent.addEventListener(\"focus\", () => searchInputRef.current.focus())\r\n        DefaultStore.focusSearchEvent.addEventListener(\"blur\", () => searchInputRef.current.blur())\r\n    }, [])\r\n\r\n    useEffect(() => setSelectedSuggestion(-1), [searchSuggestions])\r\n    useEffect(() => {\r\n        if (selectedSuggestion > -1)\r\n            setSearchText(searchSuggestions[selectedSuggestion])\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedSuggestion])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.searchRoot} onClickCapture={DefaultStore.actions.focusSearch}>\r\n                {\r\n                    theme.palette.type === \"dark\"\r\n                        ? <GoogleIcon />\r\n                        : <GoogleColourIcon />\r\n                }\r\n\r\n                <InputBase\r\n                    className={classes.searchInput}\r\n                    placeholder={\"Search Google or type a URL\"}\r\n                    autoComplete=\"off\"\r\n                    inputRef={searchInputRef}\r\n                    onKeyDown={submitQuery}\r\n                    value={searchText}\r\n                    onChange={onInputChanged}\r\n                    onFocus={() => setSearchFocused(true)}\r\n                    onBlur={() => setSearchFocused(false)}\r\n                />\r\n\r\n                <WebstoreButton />\r\n            </div>\r\n\r\n            <Collapse in={searchFocused && searchSuggestions?.length}>\r\n                <div className={classes.suggestRoot}>\r\n                    {\r\n                        searchSuggestions?.map((suggestion, index) =>\r\n                            <div\r\n                                key={suggestion}\r\n                                className={clsx(classes.suggestItem, {\r\n                                    [classes.suggestItemSelected]: index === selectedSuggestion\r\n                                })}\r\n                                onClick={() => {\r\n                                    setSearchText(suggestion)\r\n                                    NavigateOrSearch(suggestion)\r\n                                }}\r\n                            >\r\n                                <Typography variant=\"body1\" className={classes.suggestItemText}>\r\n                                    {suggestion}\r\n                                </Typography>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default view(SearchInputRoot)\r\n","import React from \"react\"\r\n\r\nimport SearchInput from \"./search-input/root\"\r\n\r\nconst MainContent = () => {\r\n    return (\r\n        <div>\r\n            <SearchInput />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n","import React from \"react\"\r\n\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nimport Wallpaper from \"../components/wallpaper\"\r\nimport MainContent from \"../components/main-content\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    wallpaperItem: {\r\n        maxWidth: 512,\r\n        flexGrow: 1,\r\n        flexShrink: 1,\r\n        overflow: \"hidden\",\r\n\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    contentItem: {\r\n        flexGrow: 1,\r\n        flexShrink: 0,\r\n        minWidth: theme.breakpoints.values.sm,\r\n        padding: theme.spacing(3),\r\n\r\n        [theme.breakpoints.only(\"xs\")]: {\r\n            minWidth: \"100%\"\r\n        }\r\n    }\r\n}))\r\n\r\nconst NTPView = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.wallpaperItem}>\r\n                <Wallpaper />\r\n            </div>\r\n\r\n            <div className={classes.contentItem}>\r\n                <MainContent />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NTPView\r\n","import React, { useEffect } from \"react\"\r\nimport Config from \"../config.json\"\r\n\r\nimport { view } from \"@risingstack/react-easy-state\"\r\nimport DefaultStore from \"../state/store\"\r\n\r\nimport { ThemeProvider, CssBaseline, createMuiTheme, makeStyles } from \"@material-ui/core\"\r\nimport NTPView from \"../views/ntp\"\r\n\r\nconst { flags } = Config\r\n\r\nconst generateTheme = props => createMuiTheme({\r\n    palette: {\r\n        type: props?.dark ? \"dark\" : \"light\"\r\n    },\r\n    typography: {\r\n        fontFamily: [\r\n            \"'Lexend Deca'\",\r\n            \"Helvetica\",\r\n            \"Arial\",\r\n            \"sans-serif\"\r\n        ]\r\n    }\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        overflowX: \"hidden\"\r\n    }\r\n})\r\n\r\nconst App = () => {\r\n    const classes = useStyles()\r\n    const isDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", evt => {\r\n            if (evt.key === \"Escape\") {\r\n                evt.preventDefault()\r\n                DefaultStore.actions.unfocusSearch()\r\n            } else if (evt.target === document.body) {\r\n                if (evt.key === \"Enter\")\r\n                    return evt.preventDefault()\r\n\r\n                DefaultStore.actions.focusSearch()\r\n            }\r\n        }, false)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ThemeProvider theme={generateTheme({\r\n                dark: process.env.NODE_ENV === \"development\"\r\n                    ? flags.enableDarkModeDev && isDark\r\n                    : flags.enableDarkMode && isDark\r\n            })}>\r\n                <CssBaseline />\r\n\r\n                <NTPView />\r\n            </ThemeProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default view(App)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"fontsource-lexend-deca\"\n\nimport App from \"./components/app\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.querySelector(\"#app\")\n)\n"],"sourceRoot":""}